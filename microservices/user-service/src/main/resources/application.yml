server:
  port: 0

spring:
  application:
    name: user-service

  zipkin:
    base-url: http://127.0.0.1:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 15MB

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console

  jpa:
    #    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        default_batch_fetch_size: 1000
#        show_sql: false
        format_sql: true
    open-in-view: false

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

kafka:
  server: 127.0.0.1:9092
  topic:
    user:
      delete: user-delete-topic
    study:
      delete: study-delete-topic
    studyApply:
      create: study-apply-create-topic
      success: study-apply-success-topic
      fail: study-apply-fail-topic
      cancel: study-apply-cancel-topic
  consumer:
    study:
      delete: study-delete-consumer-group1
    studyApply:
      create: study-apply-create-consumer-group
      success: study-apply-success-consumer-group
      fail: study-apply-fail-consumer-group
      cancel: study-apply-cancel-consumer-group

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus

logging:
  level:
    org.hibernate.SQL: debug